version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: evacuation-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - REDIS_TTL=300
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - evacuation_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: evacuation-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis-prod.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - evacuation_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis-sentinel:
    image: redis:7-alpine
    container_name: redis-sentinel
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./sentinel.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis
    networks:
      - evacuation_network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  evacuation_network:
    driver: bridge
